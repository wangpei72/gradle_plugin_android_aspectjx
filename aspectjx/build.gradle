plugins {
    // 引入kotlin
    id 'org.jetbrains.kotlin.jvm'
    // 发布到gradlePluginPortal
    id 'com.gradle.plugin-publish' version '1.0.0'
}

targetCompatibility = JavaVersion.VERSION_1_8
sourceCompatibility = JavaVersion.VERSION_1_8

// agp对应的其它依赖版本
def agpDependencies = [
        '7.4.0': [
                'com.android.tools.build:gradle:7.4.0',
                // AGP7.0.0开始内部依赖变更，之前一些传递依赖需要手动引入
                // https://developer.android.com/studio/releases/gradle-plugin?buildsystem=ndk-build#classpath-change
                'com.android.tools:common:30.0.3',
                'commons-io:commons-io:2.4'
        ],
        '7.2.2': [
                'com.android.tools.build:gradle:7.2.2',
                // AGP7.0.0开始内部依赖变更，之前一些传递依赖需要手动引入
                // https://developer.android.com/studio/releases/gradle-plugin?buildsystem=ndk-build#classpath-change
                'com.android.tools:common:30.2.2',
                'commons-io:commons-io:2.4'
        ],
        '7.1.3': [
                'com.android.tools.build:gradle:7.1.3',
                // AGP7.0.0开始内部依赖变更，之前一些传递依赖需要手动引入
                // https://developer.android.com/studio/releases/gradle-plugin?buildsystem=ndk-build#classpath-change
                'com.android.tools:common:30.1.3',
                'commons-io:commons-io:2.4'
        ],
        '4.1.3': ['com.android.tools.build:gradle:4.1.3']
]

dependencies {

    // 依赖AGP
    agpDependencies['7.4.0'].each {
        compileOnly(it)
    }

    // releases文档：https://github.com/eclipse/org.aspectj/releases
    // 因为修复多线程问题拷贝了源码类修改来覆盖，所以升级aspectjtools时要注意是否需要重新拷贝修改
    implementation "org.aspectj:aspectjtools:1.9.7"
    implementation 'com.google.code.gson:gson:2.8.9'

}

// 设置group和版本名称
group = LIB_GROUP
version = LIB_VERSION

// 发布到gradlePluginPortal
gradlePlugin {
    plugins {
        // 自定义插件
        aspectjx {
            id = 'io.github.wurensen.android-aspectjx'
            implementationClass = 'com.hujiang.gradle.plugin.android.aspectjx.AJXPlugin'
            displayName = 'Android Gradle AspectJ plugin'
            description = LIB_DES
        }
    }
}
// Specify plugin properties that apply to the whole publishing bundle (ie. all plugins in the current publication).
pluginBundle {  // Removed in Gradle 8+
    website = LIB_URL
    vcsUrl = LIB_URL

    // Individual descriptions for plugins can be set via the java-gradle-plugin, see below.
    description = LIB_DES

    // Individual tags for published plugins; overrides bundle tags for the mentioned plugins.
    // The keys used to specify the plugins must match the names of the blocks in 'gradlePlugin.plugins' (see below).
    pluginTags = [
            aspectjx: ['android', 'aspectj', 'aop']
    ]
}

// pluginMaven会自动创建：https://docs.gradle.org/nightly/userguide/java_gradle_plugin.html#maven_publish_plugin
publishing {
    publications {
        pluginMaven(MavenPublication) {
            // 和maven仓库artifactId保持一致
            artifactId = LIB_ARTIFACT
        }
    }
}

// 引用发布到maven插件
apply from: 'plugin_maven_publish.gradle'